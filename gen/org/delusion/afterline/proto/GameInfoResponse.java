// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: afterline/game.proto

package org.delusion.afterline.proto;

/**
 * Protobuf type {@code afterline.GameInfoResponse}
 */
public final class GameInfoResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:afterline.GameInfoResponse)
    GameInfoResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GameInfoResponse.newBuilder() to construct.
  private GameInfoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GameInfoResponse() {
    name_ = "";
    members_ = emptyLongList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GameInfoResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GameInfoResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 9: {

            gameId_ = input.readFixed64();
            break;
          }
          case 16: {

            accessLevel_ = input.readInt32();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 33: {

            rulesetId_ = input.readFixed64();
            break;
          }
          case 42: {
            org.delusion.afterline.proto.IconSetInfo.Builder subBuilder = null;
            if (iconSet_ != null) {
              subBuilder = iconSet_.toBuilder();
            }
            iconSet_ = input.readMessage(org.delusion.afterline.proto.IconSetInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(iconSet_);
              iconSet_ = subBuilder.buildPartial();
            }

            break;
          }
          case 49: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              members_ = newLongList();
              mutable_bitField0_ |= 0x00000001;
            }
            members_.addLong(input.readFixed64());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              members_ = newLongList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              members_.addLong(input.readFixed64());
            }
            input.popLimit(limit);
            break;
          }
          case 56: {

            maxPlayers_ = input.readUInt32();
            break;
          }
          case 65: {

            gameMaster_ = input.readFixed64();
            break;
          }
          case 72: {

            running_ = input.readBool();
            break;
          }
          case 80: {

            open_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        members_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.delusion.afterline.proto.GameProtos.internal_static_afterline_GameInfoResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.delusion.afterline.proto.GameProtos.internal_static_afterline_GameInfoResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.delusion.afterline.proto.GameInfoResponse.class, org.delusion.afterline.proto.GameInfoResponse.Builder.class);
  }

  public static final int GAME_ID_FIELD_NUMBER = 1;
  private long gameId_;
  /**
   * <code>fixed64 game_id = 1;</code>
   * @return The gameId.
   */
  @java.lang.Override
  public long getGameId() {
    return gameId_;
  }

  public static final int ACCESS_LEVEL_FIELD_NUMBER = 2;
  private int accessLevel_;
  /**
   * <pre>
   * Value of -1 will be returned if access is denied and if the game doesn't exist. Server will deny existance of games hidden from user. resources have access levels associated with them, as well as users in games. This determines what the user can and can't access. for debug purposes, sysadmins can use a secret and a forceaccess message to gain access to a resource
   * </pre>
   *
   * <code>int32 access_level = 2;</code>
   * @return The accessLevel.
   */
  @java.lang.Override
  public int getAccessLevel() {
    return accessLevel_;
  }

  public static final int NAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object name_;
  /**
   * <code>string name = 3;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 3;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RULESET_ID_FIELD_NUMBER = 4;
  private long rulesetId_;
  /**
   * <pre>
   * resource id of base ruleset
   * </pre>
   *
   * <code>fixed64 ruleset_id = 4;</code>
   * @return The rulesetId.
   */
  @java.lang.Override
  public long getRulesetId() {
    return rulesetId_;
  }

  public static final int ICON_SET_FIELD_NUMBER = 5;
  private org.delusion.afterline.proto.IconSetInfo iconSet_;
  /**
   * <pre>
   * set of icons available
   * </pre>
   *
   * <code>.afterline.IconSetInfo icon_set = 5;</code>
   * @return Whether the iconSet field is set.
   */
  @java.lang.Override
  public boolean hasIconSet() {
    return iconSet_ != null;
  }
  /**
   * <pre>
   * set of icons available
   * </pre>
   *
   * <code>.afterline.IconSetInfo icon_set = 5;</code>
   * @return The iconSet.
   */
  @java.lang.Override
  public org.delusion.afterline.proto.IconSetInfo getIconSet() {
    return iconSet_ == null ? org.delusion.afterline.proto.IconSetInfo.getDefaultInstance() : iconSet_;
  }
  /**
   * <pre>
   * set of icons available
   * </pre>
   *
   * <code>.afterline.IconSetInfo icon_set = 5;</code>
   */
  @java.lang.Override
  public org.delusion.afterline.proto.IconSetInfoOrBuilder getIconSetOrBuilder() {
    return getIconSet();
  }

  public static final int MEMBERS_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.LongList members_;
  /**
   * <code>repeated fixed64 members = 6;</code>
   * @return A list containing the members.
   */
  @java.lang.Override
  public java.util.List<java.lang.Long>
      getMembersList() {
    return members_;
  }
  /**
   * <code>repeated fixed64 members = 6;</code>
   * @return The count of members.
   */
  public int getMembersCount() {
    return members_.size();
  }
  /**
   * <code>repeated fixed64 members = 6;</code>
   * @param index The index of the element to return.
   * @return The members at the given index.
   */
  public long getMembers(int index) {
    return members_.getLong(index);
  }
  private int membersMemoizedSerializedSize = -1;

  public static final int MAX_PLAYERS_FIELD_NUMBER = 7;
  private int maxPlayers_;
  /**
   * <code>uint32 max_players = 7;</code>
   * @return The maxPlayers.
   */
  @java.lang.Override
  public int getMaxPlayers() {
    return maxPlayers_;
  }

  public static final int GAME_MASTER_FIELD_NUMBER = 8;
  private long gameMaster_;
  /**
   * <pre>
   * gives a user_id for the game master
   * </pre>
   *
   * <code>fixed64 game_master = 8;</code>
   * @return The gameMaster.
   */
  @java.lang.Override
  public long getGameMaster() {
    return gameMaster_;
  }

  public static final int RUNNING_FIELD_NUMBER = 9;
  private boolean running_;
  /**
   * <code>bool running = 9;</code>
   * @return The running.
   */
  @java.lang.Override
  public boolean getRunning() {
    return running_;
  }

  public static final int OPEN_FIELD_NUMBER = 10;
  private boolean open_;
  /**
   * <code>bool open = 10;</code>
   * @return The open.
   */
  @java.lang.Override
  public boolean getOpen() {
    return open_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (gameId_ != 0L) {
      output.writeFixed64(1, gameId_);
    }
    if (accessLevel_ != 0) {
      output.writeInt32(2, accessLevel_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
    }
    if (rulesetId_ != 0L) {
      output.writeFixed64(4, rulesetId_);
    }
    if (iconSet_ != null) {
      output.writeMessage(5, getIconSet());
    }
    if (getMembersList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(membersMemoizedSerializedSize);
    }
    for (int i = 0; i < members_.size(); i++) {
      output.writeFixed64NoTag(members_.getLong(i));
    }
    if (maxPlayers_ != 0) {
      output.writeUInt32(7, maxPlayers_);
    }
    if (gameMaster_ != 0L) {
      output.writeFixed64(8, gameMaster_);
    }
    if (running_ != false) {
      output.writeBool(9, running_);
    }
    if (open_ != false) {
      output.writeBool(10, open_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (gameId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed64Size(1, gameId_);
    }
    if (accessLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, accessLevel_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
    }
    if (rulesetId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed64Size(4, rulesetId_);
    }
    if (iconSet_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getIconSet());
    }
    {
      int dataSize = 0;
      dataSize = 8 * getMembersList().size();
      size += dataSize;
      if (!getMembersList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      membersMemoizedSerializedSize = dataSize;
    }
    if (maxPlayers_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, maxPlayers_);
    }
    if (gameMaster_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeFixed64Size(8, gameMaster_);
    }
    if (running_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, running_);
    }
    if (open_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, open_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.delusion.afterline.proto.GameInfoResponse)) {
      return super.equals(obj);
    }
    org.delusion.afterline.proto.GameInfoResponse other = (org.delusion.afterline.proto.GameInfoResponse) obj;

    if (getGameId()
        != other.getGameId()) return false;
    if (getAccessLevel()
        != other.getAccessLevel()) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (getRulesetId()
        != other.getRulesetId()) return false;
    if (hasIconSet() != other.hasIconSet()) return false;
    if (hasIconSet()) {
      if (!getIconSet()
          .equals(other.getIconSet())) return false;
    }
    if (!getMembersList()
        .equals(other.getMembersList())) return false;
    if (getMaxPlayers()
        != other.getMaxPlayers()) return false;
    if (getGameMaster()
        != other.getGameMaster()) return false;
    if (getRunning()
        != other.getRunning()) return false;
    if (getOpen()
        != other.getOpen()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + GAME_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getGameId());
    hash = (37 * hash) + ACCESS_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getAccessLevel();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + RULESET_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRulesetId());
    if (hasIconSet()) {
      hash = (37 * hash) + ICON_SET_FIELD_NUMBER;
      hash = (53 * hash) + getIconSet().hashCode();
    }
    if (getMembersCount() > 0) {
      hash = (37 * hash) + MEMBERS_FIELD_NUMBER;
      hash = (53 * hash) + getMembersList().hashCode();
    }
    hash = (37 * hash) + MAX_PLAYERS_FIELD_NUMBER;
    hash = (53 * hash) + getMaxPlayers();
    hash = (37 * hash) + GAME_MASTER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getGameMaster());
    hash = (37 * hash) + RUNNING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRunning());
    hash = (37 * hash) + OPEN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOpen());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.delusion.afterline.proto.GameInfoResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.delusion.afterline.proto.GameInfoResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.delusion.afterline.proto.GameInfoResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code afterline.GameInfoResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:afterline.GameInfoResponse)
      org.delusion.afterline.proto.GameInfoResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.delusion.afterline.proto.GameProtos.internal_static_afterline_GameInfoResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.delusion.afterline.proto.GameProtos.internal_static_afterline_GameInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.delusion.afterline.proto.GameInfoResponse.class, org.delusion.afterline.proto.GameInfoResponse.Builder.class);
    }

    // Construct using org.delusion.afterline.proto.GameInfoResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      gameId_ = 0L;

      accessLevel_ = 0;

      name_ = "";

      rulesetId_ = 0L;

      if (iconSetBuilder_ == null) {
        iconSet_ = null;
      } else {
        iconSet_ = null;
        iconSetBuilder_ = null;
      }
      members_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000001);
      maxPlayers_ = 0;

      gameMaster_ = 0L;

      running_ = false;

      open_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.delusion.afterline.proto.GameProtos.internal_static_afterline_GameInfoResponse_descriptor;
    }

    @java.lang.Override
    public org.delusion.afterline.proto.GameInfoResponse getDefaultInstanceForType() {
      return org.delusion.afterline.proto.GameInfoResponse.getDefaultInstance();
    }

    @java.lang.Override
    public org.delusion.afterline.proto.GameInfoResponse build() {
      org.delusion.afterline.proto.GameInfoResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.delusion.afterline.proto.GameInfoResponse buildPartial() {
      org.delusion.afterline.proto.GameInfoResponse result = new org.delusion.afterline.proto.GameInfoResponse(this);
      int from_bitField0_ = bitField0_;
      result.gameId_ = gameId_;
      result.accessLevel_ = accessLevel_;
      result.name_ = name_;
      result.rulesetId_ = rulesetId_;
      if (iconSetBuilder_ == null) {
        result.iconSet_ = iconSet_;
      } else {
        result.iconSet_ = iconSetBuilder_.build();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        members_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.members_ = members_;
      result.maxPlayers_ = maxPlayers_;
      result.gameMaster_ = gameMaster_;
      result.running_ = running_;
      result.open_ = open_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.delusion.afterline.proto.GameInfoResponse) {
        return mergeFrom((org.delusion.afterline.proto.GameInfoResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.delusion.afterline.proto.GameInfoResponse other) {
      if (other == org.delusion.afterline.proto.GameInfoResponse.getDefaultInstance()) return this;
      if (other.getGameId() != 0L) {
        setGameId(other.getGameId());
      }
      if (other.getAccessLevel() != 0) {
        setAccessLevel(other.getAccessLevel());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.getRulesetId() != 0L) {
        setRulesetId(other.getRulesetId());
      }
      if (other.hasIconSet()) {
        mergeIconSet(other.getIconSet());
      }
      if (!other.members_.isEmpty()) {
        if (members_.isEmpty()) {
          members_ = other.members_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureMembersIsMutable();
          members_.addAll(other.members_);
        }
        onChanged();
      }
      if (other.getMaxPlayers() != 0) {
        setMaxPlayers(other.getMaxPlayers());
      }
      if (other.getGameMaster() != 0L) {
        setGameMaster(other.getGameMaster());
      }
      if (other.getRunning() != false) {
        setRunning(other.getRunning());
      }
      if (other.getOpen() != false) {
        setOpen(other.getOpen());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.delusion.afterline.proto.GameInfoResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.delusion.afterline.proto.GameInfoResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long gameId_ ;
    /**
     * <code>fixed64 game_id = 1;</code>
     * @return The gameId.
     */
    @java.lang.Override
    public long getGameId() {
      return gameId_;
    }
    /**
     * <code>fixed64 game_id = 1;</code>
     * @param value The gameId to set.
     * @return This builder for chaining.
     */
    public Builder setGameId(long value) {
      
      gameId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>fixed64 game_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearGameId() {
      
      gameId_ = 0L;
      onChanged();
      return this;
    }

    private int accessLevel_ ;
    /**
     * <pre>
     * Value of -1 will be returned if access is denied and if the game doesn't exist. Server will deny existance of games hidden from user. resources have access levels associated with them, as well as users in games. This determines what the user can and can't access. for debug purposes, sysadmins can use a secret and a forceaccess message to gain access to a resource
     * </pre>
     *
     * <code>int32 access_level = 2;</code>
     * @return The accessLevel.
     */
    @java.lang.Override
    public int getAccessLevel() {
      return accessLevel_;
    }
    /**
     * <pre>
     * Value of -1 will be returned if access is denied and if the game doesn't exist. Server will deny existance of games hidden from user. resources have access levels associated with them, as well as users in games. This determines what the user can and can't access. for debug purposes, sysadmins can use a secret and a forceaccess message to gain access to a resource
     * </pre>
     *
     * <code>int32 access_level = 2;</code>
     * @param value The accessLevel to set.
     * @return This builder for chaining.
     */
    public Builder setAccessLevel(int value) {
      
      accessLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Value of -1 will be returned if access is denied and if the game doesn't exist. Server will deny existance of games hidden from user. resources have access levels associated with them, as well as users in games. This determines what the user can and can't access. for debug purposes, sysadmins can use a secret and a forceaccess message to gain access to a resource
     * </pre>
     *
     * <code>int32 access_level = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAccessLevel() {
      
      accessLevel_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>string name = 3;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 3;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>string name = 3;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private long rulesetId_ ;
    /**
     * <pre>
     * resource id of base ruleset
     * </pre>
     *
     * <code>fixed64 ruleset_id = 4;</code>
     * @return The rulesetId.
     */
    @java.lang.Override
    public long getRulesetId() {
      return rulesetId_;
    }
    /**
     * <pre>
     * resource id of base ruleset
     * </pre>
     *
     * <code>fixed64 ruleset_id = 4;</code>
     * @param value The rulesetId to set.
     * @return This builder for chaining.
     */
    public Builder setRulesetId(long value) {
      
      rulesetId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * resource id of base ruleset
     * </pre>
     *
     * <code>fixed64 ruleset_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearRulesetId() {
      
      rulesetId_ = 0L;
      onChanged();
      return this;
    }

    private org.delusion.afterline.proto.IconSetInfo iconSet_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.delusion.afterline.proto.IconSetInfo, org.delusion.afterline.proto.IconSetInfo.Builder, org.delusion.afterline.proto.IconSetInfoOrBuilder> iconSetBuilder_;
    /**
     * <pre>
     * set of icons available
     * </pre>
     *
     * <code>.afterline.IconSetInfo icon_set = 5;</code>
     * @return Whether the iconSet field is set.
     */
    public boolean hasIconSet() {
      return iconSetBuilder_ != null || iconSet_ != null;
    }
    /**
     * <pre>
     * set of icons available
     * </pre>
     *
     * <code>.afterline.IconSetInfo icon_set = 5;</code>
     * @return The iconSet.
     */
    public org.delusion.afterline.proto.IconSetInfo getIconSet() {
      if (iconSetBuilder_ == null) {
        return iconSet_ == null ? org.delusion.afterline.proto.IconSetInfo.getDefaultInstance() : iconSet_;
      } else {
        return iconSetBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * set of icons available
     * </pre>
     *
     * <code>.afterline.IconSetInfo icon_set = 5;</code>
     */
    public Builder setIconSet(org.delusion.afterline.proto.IconSetInfo value) {
      if (iconSetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        iconSet_ = value;
        onChanged();
      } else {
        iconSetBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * set of icons available
     * </pre>
     *
     * <code>.afterline.IconSetInfo icon_set = 5;</code>
     */
    public Builder setIconSet(
        org.delusion.afterline.proto.IconSetInfo.Builder builderForValue) {
      if (iconSetBuilder_ == null) {
        iconSet_ = builderForValue.build();
        onChanged();
      } else {
        iconSetBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * set of icons available
     * </pre>
     *
     * <code>.afterline.IconSetInfo icon_set = 5;</code>
     */
    public Builder mergeIconSet(org.delusion.afterline.proto.IconSetInfo value) {
      if (iconSetBuilder_ == null) {
        if (iconSet_ != null) {
          iconSet_ =
            org.delusion.afterline.proto.IconSetInfo.newBuilder(iconSet_).mergeFrom(value).buildPartial();
        } else {
          iconSet_ = value;
        }
        onChanged();
      } else {
        iconSetBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * set of icons available
     * </pre>
     *
     * <code>.afterline.IconSetInfo icon_set = 5;</code>
     */
    public Builder clearIconSet() {
      if (iconSetBuilder_ == null) {
        iconSet_ = null;
        onChanged();
      } else {
        iconSet_ = null;
        iconSetBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * set of icons available
     * </pre>
     *
     * <code>.afterline.IconSetInfo icon_set = 5;</code>
     */
    public org.delusion.afterline.proto.IconSetInfo.Builder getIconSetBuilder() {
      
      onChanged();
      return getIconSetFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * set of icons available
     * </pre>
     *
     * <code>.afterline.IconSetInfo icon_set = 5;</code>
     */
    public org.delusion.afterline.proto.IconSetInfoOrBuilder getIconSetOrBuilder() {
      if (iconSetBuilder_ != null) {
        return iconSetBuilder_.getMessageOrBuilder();
      } else {
        return iconSet_ == null ?
            org.delusion.afterline.proto.IconSetInfo.getDefaultInstance() : iconSet_;
      }
    }
    /**
     * <pre>
     * set of icons available
     * </pre>
     *
     * <code>.afterline.IconSetInfo icon_set = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.delusion.afterline.proto.IconSetInfo, org.delusion.afterline.proto.IconSetInfo.Builder, org.delusion.afterline.proto.IconSetInfoOrBuilder> 
        getIconSetFieldBuilder() {
      if (iconSetBuilder_ == null) {
        iconSetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.delusion.afterline.proto.IconSetInfo, org.delusion.afterline.proto.IconSetInfo.Builder, org.delusion.afterline.proto.IconSetInfoOrBuilder>(
                getIconSet(),
                getParentForChildren(),
                isClean());
        iconSet_ = null;
      }
      return iconSetBuilder_;
    }

    private com.google.protobuf.Internal.LongList members_ = emptyLongList();
    private void ensureMembersIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        members_ = mutableCopy(members_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated fixed64 members = 6;</code>
     * @return A list containing the members.
     */
    public java.util.List<java.lang.Long>
        getMembersList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(members_) : members_;
    }
    /**
     * <code>repeated fixed64 members = 6;</code>
     * @return The count of members.
     */
    public int getMembersCount() {
      return members_.size();
    }
    /**
     * <code>repeated fixed64 members = 6;</code>
     * @param index The index of the element to return.
     * @return The members at the given index.
     */
    public long getMembers(int index) {
      return members_.getLong(index);
    }
    /**
     * <code>repeated fixed64 members = 6;</code>
     * @param index The index to set the value at.
     * @param value The members to set.
     * @return This builder for chaining.
     */
    public Builder setMembers(
        int index, long value) {
      ensureMembersIsMutable();
      members_.setLong(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated fixed64 members = 6;</code>
     * @param value The members to add.
     * @return This builder for chaining.
     */
    public Builder addMembers(long value) {
      ensureMembersIsMutable();
      members_.addLong(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated fixed64 members = 6;</code>
     * @param values The members to add.
     * @return This builder for chaining.
     */
    public Builder addAllMembers(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureMembersIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, members_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated fixed64 members = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearMembers() {
      members_ = emptyLongList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private int maxPlayers_ ;
    /**
     * <code>uint32 max_players = 7;</code>
     * @return The maxPlayers.
     */
    @java.lang.Override
    public int getMaxPlayers() {
      return maxPlayers_;
    }
    /**
     * <code>uint32 max_players = 7;</code>
     * @param value The maxPlayers to set.
     * @return This builder for chaining.
     */
    public Builder setMaxPlayers(int value) {
      
      maxPlayers_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 max_players = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxPlayers() {
      
      maxPlayers_ = 0;
      onChanged();
      return this;
    }

    private long gameMaster_ ;
    /**
     * <pre>
     * gives a user_id for the game master
     * </pre>
     *
     * <code>fixed64 game_master = 8;</code>
     * @return The gameMaster.
     */
    @java.lang.Override
    public long getGameMaster() {
      return gameMaster_;
    }
    /**
     * <pre>
     * gives a user_id for the game master
     * </pre>
     *
     * <code>fixed64 game_master = 8;</code>
     * @param value The gameMaster to set.
     * @return This builder for chaining.
     */
    public Builder setGameMaster(long value) {
      
      gameMaster_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * gives a user_id for the game master
     * </pre>
     *
     * <code>fixed64 game_master = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearGameMaster() {
      
      gameMaster_ = 0L;
      onChanged();
      return this;
    }

    private boolean running_ ;
    /**
     * <code>bool running = 9;</code>
     * @return The running.
     */
    @java.lang.Override
    public boolean getRunning() {
      return running_;
    }
    /**
     * <code>bool running = 9;</code>
     * @param value The running to set.
     * @return This builder for chaining.
     */
    public Builder setRunning(boolean value) {
      
      running_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool running = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearRunning() {
      
      running_ = false;
      onChanged();
      return this;
    }

    private boolean open_ ;
    /**
     * <code>bool open = 10;</code>
     * @return The open.
     */
    @java.lang.Override
    public boolean getOpen() {
      return open_;
    }
    /**
     * <code>bool open = 10;</code>
     * @param value The open to set.
     * @return This builder for chaining.
     */
    public Builder setOpen(boolean value) {
      
      open_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool open = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearOpen() {
      
      open_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:afterline.GameInfoResponse)
  }

  // @@protoc_insertion_point(class_scope:afterline.GameInfoResponse)
  private static final org.delusion.afterline.proto.GameInfoResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.delusion.afterline.proto.GameInfoResponse();
  }

  public static org.delusion.afterline.proto.GameInfoResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GameInfoResponse>
      PARSER = new com.google.protobuf.AbstractParser<GameInfoResponse>() {
    @java.lang.Override
    public GameInfoResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GameInfoResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GameInfoResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GameInfoResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.delusion.afterline.proto.GameInfoResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

